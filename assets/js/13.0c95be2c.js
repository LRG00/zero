(window.webpackJsonp=window.webpackJsonp||[]).push([[13],{465:function(t,e,a){"use strict";a.r(e);var r=a(28),s=Object(r.a)({},(function(){var t=this,e=t.$createElement,a=t._self._c||e;return a("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[a("h2",{attrs:{id:"前端工程化"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#前端工程化"}},[t._v("#")]),t._v(" 前端工程化")]),t._v(" "),a("p",[t._v("一个前端工程的生命周期可以大致划分为这四个过程：")]),t._v(" "),a("p",[a("code",[t._v("开发")]),t._v("---------\x3e"),a("code",[t._v("测试")]),t._v("---------\x3e"),a("code",[t._v("部署")]),t._v("---------\x3e"),a("code",[t._v("维护")])]),t._v(" "),a("p",[t._v("任何在这四个过程中应用的系统化、严格约束、可量化的方法都可以称之为工程化。工程化的程度越高，在工作中因人的个体差异性导致的缺陷或者短板就会越少，项目质量可以得到更有效的保障。对上面四个过程的工程化并不是完全分隔的，而是相辅相成，比如开发阶段的优化也会对测试、部署和维护产生很大的影响。")]),t._v(" "),a("h2",{attrs:{id:"eslint-和-prettier配合"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#eslint-和-prettier配合"}},[t._v("#")]),t._v(" eslint 和 prettier配合")]),t._v(" "),a("h2",{attrs:{id:"提交代码规范和自动格式化"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#提交代码规范和自动格式化"}},[t._v("#")]),t._v(" 提交代码规范和自动格式化")]),t._v(" "),a("h2",{attrs:{id:"自动化构建"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#自动化构建"}},[t._v("#")]),t._v(" 自动化构建")]),t._v(" "),a("h2",{attrs:{id:"单元测试"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#单元测试"}},[t._v("#")]),t._v(" 单元测试")]),t._v(" "),a("h2",{attrs:{id:"集成typescript"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#集成typescript"}},[t._v("#")]),t._v(" 集成typescript")])])}),[],!1,null,null,null);e.default=s.exports}}]);