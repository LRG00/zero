(window.webpackJsonp=window.webpackJsonp||[]).push([[20],{473:function(t,s,a){"use strict";a.r(s);var e=a(28),n=Object(e.a)({},(function(){var t=this,s=t.$createElement,a=t._self._c||s;return a("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[a("h2",{attrs:{id:"vue-的理解-优缺点"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#vue-的理解-优缺点"}},[t._v("#")]),t._v(" Vue 的理解，优缺点")]),t._v(" "),a("p",[t._v("Vue 是一个构建数据驱动的渐进性框架，它的目标是通过 API 实现响应数据绑定和视图更新")]),t._v(" "),a("p",[t._v("优点：渐进式，组件化，轻量级，虚拟 dom，响应式，单页面路由，数据与视图分开")]),t._v(" "),a("p",[t._v("缺点：单页面不利于 seo，不支持 IE8 以下，首屏加载时间长")]),t._v(" "),a("h2",{attrs:{id:"mvvm"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#mvvm"}},[t._v("#")]),t._v(" MVVM")]),t._v(" "),a("p",[t._v("全称： "),a("code",[t._v("Model-View-ViewModel")]),t._v(" ， "),a("code",[t._v("Model")]),t._v(" 表示数据模型层。 "),a("code",[t._v("view")]),t._v(" 表示视图层， "),a("code",[t._v("ViewModel")]),t._v(" 是 "),a("code",[t._v("View")]),t._v(" 和 Model 层的桥梁，数据绑定到 "),a("code",[t._v("viewModel")]),t._v(" 层并自动渲染到页面中，视图变化通知 "),a("code",[t._v("viewModel")]),t._v(" 层更新数据。")]),t._v(" "),a("h2",{attrs:{id:"为什么说-vue-是一个渐进式框架"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#为什么说-vue-是一个渐进式框架"}},[t._v("#")]),t._v(" 为什么说 Vue 是一个渐进式框架？")]),t._v(" "),a("p",[t._v("渐进式：通俗点讲就是，你想用啥你就用啥，咱也不强求你。你想用 component 就用，不用也行，你想用 vuex 就用，不用也可以")]),t._v(" "),a("h2",{attrs:{id:"vue-组件通讯方式"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#vue-组件通讯方式"}},[t._v("#")]),t._v(" vue 组件通讯方式")]),t._v(" "),a("ul",[a("li",[t._v("props 和$emit 父组件向子组件传递数据是通过 prop 传递的，子组件传递数据给父组件是通过$emit 触发事件来做到的、")]),t._v(" "),a("li",[t._v("$parent,$children 获取当前组件的父组件和当前组件的子组件")]),t._v(" "),a("li",[t._v("$attrs 和$listeners A->B->C。解决深层组件间的通信， Vue 2.4 开始提供了$attrs 和$listeners 来解决这个问题")]),t._v(" "),a("li",[t._v("父组件中通过 provide 来提供变量，然后在子组件中通过 inject 来注入变量。")]),t._v(" "),a("li",[t._v("$refs 获取组件实例")]),t._v(" "),a("li",[t._v("envetBus 兄弟组件数据传递")]),t._v(" "),a("li",[t._v("vuex 状态管理")])]),t._v(" "),a("h2",{attrs:{id:"vuex-的-mutation-和-action-的区别吗"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#vuex-的-mutation-和-action-的区别吗"}},[t._v("#")]),t._v(" Vuex 的 Mutation 和 Action 的区别吗")]),t._v(" "),a("p",[t._v("Vuex 是一个专为 Vue 应用程序开发的状态管理模式。每一个 Vuex 应用的核心就是 store（仓库）。")]),t._v(" "),a("p",[t._v("Vuex 主要包括以下几个核心模块：")]),t._v(" "),a("ol",[a("li",[a("p",[a("code",[t._v("State")]),t._v("：定义了应用的状态数据")])]),t._v(" "),a("li",[a("p",[a("code",[t._v("Getter")]),t._v("：在 store 中定义“getter”（可以认为是 store 的计算属性），就像计算属性一样，getter 的返回值会根据它的依赖被缓存起来， 且只有当它的依赖值发生了改变才会被重新计算")])]),t._v(" "),a("li",[a("p",[a("code",[t._v("Mutation")]),t._v("：是唯一更改 store 中状态的方法，且必须是同步函数")])]),t._v(" "),a("li",[a("p",[a("code",[t._v("Action")]),t._v("：用于提交 mutation，而不是直接变更状态，可以包含任意异步操作 5. Module：允许将单一的 Store 拆分为多个 store 且同时保存在单一的状态树中")])])]),t._v(" "),a("h2",{attrs:{id:"v-if-和-v-for-优先级"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#v-if-和-v-for-优先级"}},[t._v("#")]),t._v(" v-if 和 v-for 优先级")]),t._v(" "),a("p",[t._v("1、v-for 优先于 v-if 被解析")]),t._v(" "),a("p",[t._v("2、如果同时出现，每次渲染都会先执行循环在判断条件，无论如何循环都不可避免，浪费了性能")]),t._v(" "),a("p",[t._v("3、要避免出现这种情况，在外层嵌套 template，在这一层进行 v-if 判断，然后在内部进行 v-for 循环")]),t._v(" "),a("h2",{attrs:{id:"vue-生命周期"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#vue-生命周期"}},[t._v("#")]),t._v(" vue 生命周期")]),t._v(" "),a("p",[t._v("Vue 实例从创建到销毁的过程，就是生命周期。也就是从开始创建、初始化数据、编译模板、挂载DOM-渲染、更新-渲染、卸载等一系列的过程，每个过程对应着生命周期钩子，就是说在达到某一阶段或条件时去触发的函数，目的就是为了完成一些动作或者事件")]),t._v(" "),a("ul",[a("li",[a("code",[t._v("create阶段")]),t._v("：vue 实例被创建")])]),t._v(" "),a("p",[t._v("beforeCreate: 创建前，此时 data 和 methods 中的数据都还没有初始化")]),t._v(" "),a("p",[t._v("created： 创建完毕，data 中有值，未挂载")]),t._v(" "),a("p",[t._v("-"),a("code",[t._v("mount阶段")]),t._v("： vue 实例被挂载到真实 DOM 节点")]),t._v(" "),a("p",[t._v("beforeMount：可以发起服务端请求，去数据")]),t._v(" "),a("p",[t._v("mounted: 此时可以操作 DOM")]),t._v(" "),a("ul",[a("li",[a("code",[t._v("update阶段")]),t._v("：当 vue 实例里面的 data 数据变化时，触发组件的重新渲染")])]),t._v(" "),a("p",[t._v("beforeUpdate :更新前")]),t._v(" "),a("p",[t._v("updated：更新后")]),t._v(" "),a("p",[t._v("-"),a("code",[t._v("destroy阶段")]),t._v("：vue 实例被销毁")]),t._v(" "),a("p",[t._v("beforeDestroy：实例被销毁前，此时可以手动销毁一些方法")]),t._v(" "),a("p",[t._v("destroyed:销毁后")]),t._v(" "),a("h2",{attrs:{id:"vue-底层实现原理"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#vue-底层实现原理"}},[t._v("#")]),t._v(" Vue 底层实现原理")]),t._v(" "),a("p",[t._v("vue 实例化的时候会创建一个 observe 实例，通过 Object.defineProperty 对 data 设置 get，set。 初始化编译的时候会触发 get 方法进行依赖收集，将观察者 watcher 对象添加到订阅者 dep 中。数据改变的时候会触发 set方法，通知 dep 中的 watcher 执行 update 方法, 将 watcher 添加到事件队列 queue 中，执行 nextTick(queue)。")]),t._v(" "),a("p",[a("strong",[a("code",[t._v("Observer（数据监听器）")])]),t._v(" Observer 的核心是通过 Object.defineProprtty()来监听数据的变动，这个函数内部可以定义 setter 和 getter，每当数据发生变化，就会触发 setter。这时候 Observer 就要通知订阅者，订阅者就是 Watcher")]),t._v(" "),a("p",[a("strong",[a("code",[t._v("Watcher（订阅者）")])]),t._v(" Watcher 订阅者作为 Observer 和 Compile 之间通信的桥梁，主要做的事情是：")]),t._v(" "),a("ol",[a("li",[t._v("在自身实例化时往属性订阅器(dep)里面添加自己")]),t._v(" "),a("li",[t._v("自身必须有一个 update()方法")]),t._v(" "),a("li",[t._v("待属性变动 dep.notice()通知时，能调用自身的 update()方法，并触发 Compile 中绑定的回调")])]),t._v(" "),a("p",[a("strong",[a("code",[t._v("Compile（指令解析器）")])]),t._v(" Compile 主要做的事情是解析模板指令，将模板中变量替换成数据，然后初始化渲染页面视图，并将每个指令对应的节点绑定更新函数，添加鉴定数据的订阅者，一旦数据有变动，收到通知，更新试图")]),t._v(" "),a("h2",{attrs:{id:"computed-与-watch"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#computed-与-watch"}},[t._v("#")]),t._v(" computed 与 watch")]),t._v(" "),a("p",[t._v("计算属性本质上是 computed watcher，而侦听属性本质上是 user watcher。")]),t._v(" "),a("p",[t._v("就应用场景而言，计算属性适合用在模板渲染中，某个值是依赖了其它的响应式对象甚至是计算属性计算而来；而侦听属性适用于观测某个值的变化去完成一段复杂的业务逻辑。")]),t._v(" "),a("p",[a("code",[t._v("使用场景")]),t._v(" computed：当一个属性受多个属性影响的时候使用，例：购物车商品结算功能。watch：当一条数据影响多条数据的时候使用，例：搜索数据")]),t._v(" "),a("h2",{attrs:{id:"key-的作用是什么"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#key-的作用是什么"}},[t._v("#")]),t._v(" key 的作用是什么？")]),t._v(" "),a("ul",[a("li",[t._v("Key 的作用：\n主要用来在虚拟 DOM 的 diff 算法中，在新旧节点的对比时辨别 vnode ，key可以精准的判断两个节点是否是同一个，从而避免频繁更新不同元素，使得整个patch过程更加高效，减少了dom的操作量。常见的列子是结合 v-for 来进行列表渲染，或者用于强制替换元素/组件。")]),t._v(" "),a("li",[t._v("设置 Key 的好处：\n"),a("ul",[a("li",[t._v("（1）数据更新时，可以尽可能的减少 DOM 操作；")]),t._v(" "),a("li",[t._v("（2）列表渲染时，可以提高列表渲染的效率，提高页面的性能；")])])])]),t._v(" "),a("h2",{attrs:{id:"v-model-中的实现原理"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#v-model-中的实现原理"}},[t._v("#")]),t._v(" v-model 中的实现原理")]),t._v(" "),a("p",[t._v("v-model 可以看成是 value+input 方法的语法糖（组件）。原生的 v-model ，会根据标签的不同生成不同的事件与属性。解析一个指令来。")]),t._v(" "),a("h2",{attrs:{id:"为什么-vue-采用异步渲染"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#为什么-vue-采用异步渲染"}},[t._v("#")]),t._v(" 为什么 Vue 采用异步渲染")]),t._v(" "),a("p",[t._v("如果采用同步更新的话，vue 观察到数据改变就进行一次计算、渲染，那么就会重复渲染。对属性进行多次操作的情况，我们并不关心中间的过程发生了什么，只需要知道最后的结果。")]),t._v(" "),a("h2",{attrs:{id:"nexttick-的实现原理是什么"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#nexttick-的实现原理是什么"}},[t._v("#")]),t._v(" nextTick 的实现原理是什么？")]),t._v(" "),a("ul",[a("li",[a("p",[t._v("简单的概括，nextTick 只做了两件事情:")]),t._v(" "),a("p",[t._v("-将回调函数 cb 包装处理为箭头函数添加到事件队列中\n-事件队列异步执行（执行的优先顺序为 promise.then => MutationObserver => setImmediate => setTimeout）")])])]),t._v(" "),a("h2",{attrs:{id:"路由原理-history-和-hash-两种路由方式的特点"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#路由原理-history-和-hash-两种路由方式的特点"}},[t._v("#")]),t._v(" 路由原理 history 和 hash 两种路由方式的特点")]),t._v(" "),a("ul",[a("li",[a("p",[t._v("hash 模式")]),t._v(" "),a("ul",[a("li",[a("p",[a("code",[t._v("实现原理")]),t._v("：location.hash 的值实际就是 URL 中#后面的东西 它的特点在于：hash 虽然出现 URL 中，但不会被包含在 HTTP 请求中，对后端完全没有影响，因此改变 hash 不会重新加载页面。")])]),t._v(" "),a("li",[a("p",[t._v("可以为 hash 的改变添加监听事件 "),a("code",[t._v('window.addEventListener("hashchange", funcRef, false);')])])]),t._v(" "),a("li",[a("p",[a("code",[t._v("特点")]),t._v("：每一次改变 hash（window.location.hash），都会在浏览器的访问历史中增加一个记录，实现前端路由“更新视图但不重新请求页面”的功能了")])])])]),t._v(" "),a("li",[a("p",[t._v("history 模式")]),t._v(" "),a("ul",[a("li",[a("code",[t._v("实现原理")]),t._v("：利用了 HTML5 History Interface 中新增的 pushState() 和 replaceState() 方法。\n这两个方法应用于浏览器的历史记录站，在当前已有的 back、forward、go 的基础之上，它们提供了对历史记录进行修改的功能。")]),t._v(" "),a("li",[a("code",[t._v("特点")]),t._v("：当调用他们修改浏览器历史记录栈后，虽然当前 URL 改变了，但浏览器不会刷新页面，这就为单页应用前端路由“更新视图但不重新请求页面”提供了基础。")])])])]),t._v(" "),a("h2",{attrs:{id:"路由懒加载的方式"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#路由懒加载的方式"}},[t._v("#")]),t._v(" 路由懒加载的方式")]),t._v(" "),a("ul",[a("li",[a("p",[t._v("Vue 异步组件技术")])]),t._v(" "),a("li",[a("p",[t._v("动态 import 语法")])]),t._v(" "),a("li",[a("p",[t._v("require.ensure()")])])]),t._v(" "),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 异步组件")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token literal-property property"}},[t._v("path")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'/Demo'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token literal-property property"}},[t._v("name")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'Demo'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//打包后，每个组件单独生成一个chunk文件")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token function-variable function"}},[t._v("component")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("reslove")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=>")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("require")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'../views/Demo'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" resolve"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//动态import 默认将每个组件，单独打包成一个js文件")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function-variable function"}},[t._v("Demo")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=>")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("import")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'../views/Demo'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// require.ensure")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function-variable function"}},[t._v("Demo")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("r")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=>")]),t._v(" require"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("ensure")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=>")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("r")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("require")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'../views/Demo'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'Demo'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])]),a("h2",{attrs:{id:"keep-alive-的实现"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#keep-alive-的实现"}},[t._v("#")]),t._v(" keep-alive 的实现")]),t._v(" "),a("ul",[a("li",[a("p",[t._v("作用：实现组件缓存，保持这些组件的状态，以避免反复渲染导致的性能问题。 需要缓存组件 频繁切换，不需要重复渲染")])]),t._v(" "),a("li",[a("p",[t._v("场景：tabs 标签页 后台导航，vue 性能优化")])]),t._v(" "),a("li",[a("p",[t._v("原理：Vue.js 内部将 DOM 节点抽象成了一个个的 VNode 节点，keep-alive 组件的缓存也是基于 VNode 节点的而不是直接存储 DOM 结构。它将满足条件（pruneCache 与 pruneCache）的组件在 cache 对象中缓存起来，在需要重新渲染的时候再将 vnode 节点从 cache 对象中取出并渲染。")])])]),t._v(" "),a("h2",{attrs:{id:"异步组件"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#异步组件"}},[t._v("#")]),t._v(" 异步组件")]),t._v(" "),a("p",[t._v("Vue 允许你以一个工厂函数的方式定义你的组件，这个工厂函数会异步解析你的组件定义。Vue 只有在这个组件需要被渲染的时候才会触发该工厂函数，且会把结果缓存起来供未来重渲染。\n"),a("code",[t._v("优点")]),t._v("：节省打包出的结果，异步组件分开打包，采用 jsonp 的方式进行加载，有效解决文件过大的问题。")]),t._v(" "),a("p",[t._v("一个推荐的做法是将异步组件和 webpack 的 code-splitting 功能一起配合使用：")]),t._v(" "),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[t._v("Vue"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("component")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"async-webpack-example"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("resolve")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 这个特殊的 `require` 语法将会告诉 webpack")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 自动将你的构建代码切割成多个包，这些包")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 会通过 Ajax 请求加载")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("require")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"./my-async-component"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" resolve"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),a("p",[t._v("使用局部注册的时候,可以直接提供一个返回 Promise 的函数：")]),t._v(" "),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Vue")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// ...")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token literal-property property"}},[t._v("components")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token string-property property"}},[t._v('"my-component"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=>")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("import")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"./my-async-component"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),a("h2",{attrs:{id:"什么是虚拟-dom"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#什么是虚拟-dom"}},[t._v("#")]),t._v(" 什么是虚拟 DOM？")]),t._v(" "),a("p",[t._v("虚拟 DOM 是一个对象，一个用来表示真实 DOM 的对象")]),t._v(" "),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("ul id"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"list"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("li "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("class")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"item"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("111")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v("li"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("li "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("class")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"item"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("222")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v("li"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("li "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("class")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"item"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("333")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v("li"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v("ul"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" oldVDOM "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 旧虚拟DOM")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token literal-property property"}},[t._v("tagName")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"ul"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 标签名")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token literal-property property"}},[t._v("props")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 标签属性")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token literal-property property"}},[t._v("id")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"list"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token literal-property property"}},[t._v("children")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 标签子节点")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n      "),a("span",{pre:!0,attrs:{class:"token literal-property property"}},[t._v("tagName")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"li"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n      "),a("span",{pre:!0,attrs:{class:"token literal-property property"}},[t._v("props")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("class")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"item"')]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n      "),a("span",{pre:!0,attrs:{class:"token literal-property property"}},[t._v("children")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"111"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n      "),a("span",{pre:!0,attrs:{class:"token literal-property property"}},[t._v("tagName")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"li"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n      "),a("span",{pre:!0,attrs:{class:"token literal-property property"}},[t._v("props")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("class")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"item"')]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n      "),a("span",{pre:!0,attrs:{class:"token literal-property property"}},[t._v("children")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"222"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n      "),a("span",{pre:!0,attrs:{class:"token literal-property property"}},[t._v("tagName")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"li"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n      "),a("span",{pre:!0,attrs:{class:"token literal-property property"}},[t._v("props")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("class")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"item"')]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n      "),a("span",{pre:!0,attrs:{class:"token literal-property property"}},[t._v("children")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"333"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),a("h2",{attrs:{id:"diff-算法"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#diff-算法"}},[t._v("#")]),t._v(" diff 算法")]),t._v(" "),a("p",[t._v("Diff 算法是一种对比算法。对比两者是"),a("code",[t._v("旧虚拟DOM和新虚拟DOM")]),t._v("，对比出是哪个"),a("code",[t._v("虚拟节点")]),t._v("更改了，找出这个"),a("code",[t._v("虚拟节点")]),t._v("，并只更新这个虚拟节点所对应的"),a("code",[t._v("真实节点")]),t._v("，而不用更新其他数据没发生改变的节点，实现"),a("code",[t._v("精准")]),t._v("地更新真实 DOM，进而"),a("code",[t._v("提高效率")]),t._v("。")]),t._v(" "),a("ul",[a("li",[a("p",[t._v("Diff 算法的原理： -"),a("code",[t._v("Diff同层对比")]),t._v(": 新旧虚拟 DOM 对比的时候，Diff 算法比较只会在同层级进行, 不会跨层级比较。 所以 Diff 算法是:深度优先算法。 时间复杂度:O(n) -"),a("code",[t._v("Diff对比流程")]),t._v(": 当数据改变时，会触发 setter，并且通过 Dep.notify 去通知所有订阅者 Watcher，订阅者们就会调用 patch 方法，给真实 DOM 打补丁，更新相应的视图。")]),t._v(" "),a("ul",[a("li",[a("p",[a("code",[t._v("patch方法")]),t._v("：方法作用就是，对比当前同层的虚拟节点是否为同一种类型的标签")]),t._v(" "),a("ul",[a("li",[t._v("是：继续执行 patchVnode 方法进行深层比对")]),t._v(" "),a("li",[t._v("否：没必要比对了，直接整个节点替换成新虚拟节点")])])]),t._v(" "),a("li",[a("p",[a("code",[t._v("sameVnode方法")]),t._v(": patch 关键的一步就是 sameVnode 方法判断是否为同一类型节点, 怎么才算是同一类型节点?")]),t._v(" "),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("sameVnode")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("oldVnode"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" newVnode")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("\n    oldVnode"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("key "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("===")]),t._v(" newVnode"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("key "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("&&")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// key值是否一样")]),t._v("\n    oldVnode"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("tagName "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("===")]),t._v(" newVnode"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("tagName "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("&&")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 标签名是否一样")]),t._v("\n    oldVnode"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("isComment "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("===")]),t._v(" newVnode"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("isComment "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("&&")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 是否都为注释节点")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("isDef")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("oldVnode"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("data"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("===")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("isDef")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("newVnode"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("data"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("&&")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 是否都定义了data")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("sameInputType")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("oldVnode"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" newVnode"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 当标签为input时，type必须是否相同")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])])]),t._v(" "),a("li",[a("p",[a("code",[t._v("patchVnode方法")]),t._v(":")]),t._v(" "),a("ul",[a("li",[t._v("找到对应的"),a("code",[t._v("真实DOM")]),t._v("，称为"),a("code",[t._v("el")])]),t._v(" "),a("li",[t._v("判断"),a("code",[t._v("newVnode")]),t._v("和"),a("code",[t._v("oldVnode")]),t._v("是否指向同一个对象，如果是，那么直接"),a("code",[t._v("return")])]),t._v(" "),a("li",[t._v("如果他们都有文本节点并且不相等，那么将"),a("code",[t._v("el")]),t._v("的文本节点设置为"),a("code",[t._v("newVnode")]),t._v("的文本节点。")]),t._v(" "),a("li",[t._v("如果"),a("code",[t._v("oldVnode")]),t._v("有子节点而"),a("code",[t._v("newVnode")]),t._v("没有，则删除"),a("code",[t._v("el")]),t._v("的子节点")]),t._v(" "),a("li",[t._v("如果"),a("code",[t._v("oldVnode")]),t._v("没有子节点而"),a("code",[t._v("newVnode")]),t._v("有，则将"),a("code",[t._v("newVnode")]),t._v("的子节点真实化之后添加到el")]),t._v(" "),a("li",[t._v("如果两者都有子节点，则执行"),a("code",[t._v("updateChildren函数")]),t._v("比较子节点，这一步很重要")])])]),t._v(" "),a("li",[a("p",[a("code",[t._v("updateChildren方法")]),t._v(": 也是一个对比方法，也叫"),a("code",[t._v("首尾指针法")]),t._v("，对比子节点是否一样")])]),t._v(" "),a("li",[a("p",[t._v("patch(vnode, newVnode) ，数据改变二次渲染，对比新旧 VNode 是否相同节点然后更新 DOM")])]),t._v(" "),a("li",[a("p",[t._v("createElm(vnode, insertedVnodeQueue)，先执行用户的 init 钩子函数，然后把 vnode 转换成真实 DOM（此时没有渲染到页面），最后返回新创建的 DOM")])]),t._v(" "),a("li",[a("p",[t._v("updateChildren(elm, oldCh, ch, insertedVnodeQueue), 如果 VNode 有子节点，并且与旧 VNode 子节点不相同则执行 updateChildren()，比较子节点的差异并更新到 DOM")])])])])]),t._v(" "),a("h2",{attrs:{id:"vue-性能优化"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#vue-性能优化"}},[t._v("#")]),t._v(" vue 性能优化")]),t._v(" "),a("ul",[a("li",[t._v("路由懒加载")]),t._v(" "),a("li",[t._v("keep-alive缓存页面")]),t._v(" "),a("li",[t._v("使用v-show复用DOM")]),t._v(" "),a("li",[t._v("v-for遍历避免同时使用v-if")]),t._v(" "),a("li",[t._v("事件销毁（定时器）")]),t._v(" "),a("li",[t._v("图片懒加载")]),t._v(" "),a("li",[t._v("第三方插件按需导入")]),t._v(" "),a("li",[t._v("无状态组件标记为函数式组件")]),t._v(" "),a("li",[t._v("SSR")])]),t._v(" "),a("h2",{attrs:{id:"参考资料"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#参考资料"}},[t._v("#")]),t._v(" 参考资料")]),t._v(" "),a("p",[a("a",{attrs:{href:"https://vue-js.com/learn-vue/",target:"_blank",rel:"noopener noreferrer"}},[t._v("https://vue-js.com/learn-vue/"),a("OutboundLink")],1),t._v(" Vue 源码系列-Vue 中文社区")]),t._v(" "),a("p",[a("a",{attrs:{href:"https://ustbhuangyi.github.io/vue-analysis/",target:"_blank",rel:"noopener noreferrer"}},[t._v("https://ustbhuangyi.github.io/vue-analysis/"),a("OutboundLink")],1),t._v(" Vue.js 技术揭秘")])])}),[],!1,null,null,null);s.default=n.exports}}]);